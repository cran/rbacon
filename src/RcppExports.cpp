// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// bacon
int bacon(std::string inputfile1, std::string outputfile1, int ssize, std::string dircc);
RcppExport SEXP _rbacon_bacon(SEXP inputfile1SEXP, SEXP outputfile1SEXP, SEXP ssizeSEXP, SEXP dirccSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type inputfile1(inputfile1SEXP);
    Rcpp::traits::input_parameter< std::string >::type outputfile1(outputfile1SEXP);
    Rcpp::traits::input_parameter< int >::type ssize(ssizeSEXP);
    Rcpp::traits::input_parameter< std::string >::type dircc(dirccSEXP);
    rcpp_result_gen = Rcpp::wrap(bacon(inputfile1, outputfile1, ssize, dircc));
    return rcpp_result_gen;
END_RCPP
}
// events
void events(double th1, double th2, double th_shift, double window, std::string outputfname1, std::string MCMCsamplesfname1, int samplesize, int K, double c0, double Dc, std::string eventprobsfname1, int depths_size);
RcppExport SEXP _rbacon_events(SEXP th1SEXP, SEXP th2SEXP, SEXP th_shiftSEXP, SEXP windowSEXP, SEXP outputfname1SEXP, SEXP MCMCsamplesfname1SEXP, SEXP samplesizeSEXP, SEXP KSEXP, SEXP c0SEXP, SEXP DcSEXP, SEXP eventprobsfname1SEXP, SEXP depths_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type th1(th1SEXP);
    Rcpp::traits::input_parameter< double >::type th2(th2SEXP);
    Rcpp::traits::input_parameter< double >::type th_shift(th_shiftSEXP);
    Rcpp::traits::input_parameter< double >::type window(windowSEXP);
    Rcpp::traits::input_parameter< std::string >::type outputfname1(outputfname1SEXP);
    Rcpp::traits::input_parameter< std::string >::type MCMCsamplesfname1(MCMCsamplesfname1SEXP);
    Rcpp::traits::input_parameter< int >::type samplesize(samplesizeSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type c0(c0SEXP);
    Rcpp::traits::input_parameter< double >::type Dc(DcSEXP);
    Rcpp::traits::input_parameter< std::string >::type eventprobsfname1(eventprobsfname1SEXP);
    Rcpp::traits::input_parameter< int >::type depths_size(depths_sizeSEXP);
    events(th1, th2, th_shift, window, outputfname1, MCMCsamplesfname1, samplesize, K, c0, Dc, eventprobsfname1, depths_size);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rbacon_bacon", (DL_FUNC) &_rbacon_bacon, 4},
    {"_rbacon_events", (DL_FUNC) &_rbacon_events, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_rbacon(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
